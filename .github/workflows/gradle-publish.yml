# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

# 워크 플로 이름
name: CI/CD

# 워크 플로의 시작 조건: main 브랜치에 push
on:
  push:
    branches:
      - develop

env:
  S3_BUCKET_NAME: odagadacicd
  PROJECT_NAME: Trimo-BE
  CODE_DEPLOY_APP_NAME: odagada_cicd
  DEPLOYMENT_GROUP_NAME: odagada_cicd

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read 
      packages: write
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew # (7)
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean -x test build # (8)
      shell: bash
      
    - name: Get current time
      uses: 1466587594/get-current-time@v2 
      id: current-time
      with:
        format: YYYY-MM-DDTHH-mm-ss # (9)
        utcOffset: "+09:00"

    - name: Show Current Time
      run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}" # (10)
      shell: bash

    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip .         # (12)
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1      #(13)
      with:        
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID ||  secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY ||  secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$PROJECT_NAME.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$PROJECT_NAME.zip  #(14)

    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODE_DEPLOY_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$PROJECT_NAME.zip
